#!/usr/bin/env ruby

require 'netns-vrf/ip'
require 'netns-vrf/netns'
require 'netns-vrf/route'
require 'netns-vrf/interface'


def help
   puts "usage: netns-vrf [options]\n\n"
   puts "options: "
   puts "  - create [VRF_NAME]"
   puts "  - delete [VRF_NAME]"
   puts "  - show [VRF_NAME:optional]"
   puts "  - interface (push|remove) [IFACE_NAME] [VRF_NAME]"
   puts "  - ip address (inet|inet6) (add|delete) [IP_ADDRESS] [IFACE_NAME] [VRF_NAME]" 
   puts "  - ip route (inet|inet6) (add|delete) [DESTINATION_PREFIX] [NEXT_HOP] [IFACE_NAME] [VRF_NAME]\n\n"
   exit 0
end
 
begin
  if ARGV[0]
     case ARGV[0]
         when 'create'
              if ARGV[1]
	         vrf_name = ARGV[1]
                 vrf_instance = VRFLite::NetNs.new(vrf_name)
                 vrf_instance.build
	         puts "+ vrf created: #{vrf_name}"
              else
                 help
              end
         
         when 'delete'
              if ARGV[1]
                 vrf_name = ARGV[1]
                 vrf_instance = VRFLite::NetNs.new(vrf_name)
                 vrf_instance.destroy
		 puts "+ vrf deleted: #{vrf_name}"
              else
                 help
              end
   
         when 'show'
              vrf_name = ARGV[1] if ARGV[1]
              vrf_name = nil if not ARGV[1]
              vrf_table = VRFLite::NetNs.new(vrf_name)
              vrf_table_array = vrf_table.display
              vrf_table_array.each do |vta|
                puts "display vrf: #{vta}"
                puts "--------------------------"
                vrf_local_link = `ip netns exec #{vta} ip address show`
                puts "#{vrf_local_link}"
                puts "--------------------------\n\n"
	      end
      
          when 'interface'
              if ARGV[1] and ARGV[2] and ARGV[3]
		  action_switch, if_name, vrf_name = ARGV[1..3]
		  interface = VRFLite::Interface.new(if_name, vrf_name)
		  if action_switch == "push"
	             if_action = interface.add_to_vrf
                     action_type = 0
	          elsif action_switch == "remove"
		     if_action = interface.del_from_vrf
		     action_type = 1
		  else
                     help
                  end
                  if if_action.to_i == 0 and action_type == 0
                     puts "+ interface #{if_name} correctly added to vrf: #{vrf_name}"
                  elsif if_action.to_i == 0 and action_type == 1
                     puts "+ interface #{if_name} correctly removed from vrf: #{vrf_name}"
		  else 
                     puts "+ interface #{if_name} not found in the system: #{if_action}:#{action_type}"
                  end
	      else
                 help
              end

          when 'ip'
              help if not ARGV[1]
              case ARGV[1]
                   when 'address'
                       if ARGV[2] == "inet" || ARGV[2] == "inet6" && ARGV[3..6]
                          action_switch, ip_addr, if_name, vrf_name  = ARGV[3..6]
		          ip = VRFLite::IP.new(ip_addr, if_name, vrf_name)
                          if action_switch == "add" && ARGV[2] == "inet"
			     ip_action = ip.add_to_vrf
                             action_type = 0
                          elsif action_switch == "add" && ARGV[2] == "inet6"
                             ip_action =  ip.add_ip6_to_vrf
                             action_type = 0
                          elsif action_switch == "delete" && ARGV[2] == "inet"
                             ip_action = ip.del_from_vrf
                             action_type = 1
                          elsif action_switch = "delete" && ARGV[2] == "inet6"
                             ip_action = ip.del_ip6_to_vrf
                             action_type = 1
			  else
                             help
                          end
			  if ip_action.to_i == 0 and action_type == 0
                             puts "+ IP address #{ip_addr} correctly added to interface #{if_name} : VRF #{vrf_name}"
                          elsif ip_action.to_i == 0 and action_type == 1
                             puts "+ IP address #{ip_addr} correctly deleted from interface #{if_name} : VRF #{vrf_name}"
                          else
                             puts "+ unable to add/delete IP address #{ip_addr} to/from interface #{if_name} : VRF #{vrf_name}"
                          end
                       else
                          help
                       end
                    when 'route'
                       if ARGV[2] == "inet" || ARGV[2] == "inet6" && ARGV[3..7]
                          action_switch, ip_dst, ip_next_hop, if_name, vrf_name  = ARGV[3..7]
                          static_route = VRFLite::Route.new(ip_dst, ip_next_hop, if_name, vrf_name)
                          if action_switch == "add" && ARGV[2] == "inet"
                             routing_action = static_route.add_to_vrf_inet
			     action_type = 0
                          elsif action_switch == "add" && ARGV[2] == "inet6"
                             routing_action = static_route.add_to_vrf_inet6
			     action_type = 0
                          elsif action_switch == "delete" && ARGV[2] == "inet"
                             routing_action = static_route.del_from_vrf_inet
                             action_type = 1
                          elsif action_switch == "delete" && ARGV[2] == "inet6"
                             routing_action = static_route.del_from_vrf_inet6
                             action_type = 1
                          elsif action_switch == "show" && ip_dst
			     vrf_name = ip_dst
			     route_show = `ip netns exec #{vrf_name} ip route show`.chop if ARGV[2] == "inet"
                             route_show = `ip netns exec #{vrf_name} ip route show`.chop if ARGV[2] == "inet6"
		             puts "display vrf #{vrf_name} routing table:\n\n"
			     puts route_show
			     puts "\n\n"
                             routing_action = "1"
                             action_type = 1
			  else
                             help
                          end
                          if routing_action.to_i == 0 and action_type == 0
                             puts "+ route to #{ip_dst} added - nexthop: #{ip_next_hop} - iface: #{if_name} - VRF #{vrf_name}"
                          elsif routing_action.to_i == 0 and action_type == 1
                             puts "+ route to #{ip_dst} correctly deleted"
			  elsif routing_action.to_i == 1 and action_type == 1
                          else
                             puts "+ unable to add/delete route."
                          end
                       else
                         help
                       end

              else
                 help
              end


   
     else
        help
     end
  else
     help
  end
end
